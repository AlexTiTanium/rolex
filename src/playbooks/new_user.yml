---
- name: Create new user for host
  hosts: all
  tasks:
    - name: Create new user
      user:
        name: "{{ user }}"
        home: "/home/{{ user }}/"

    - name: Add new user to Caddy group
      user:
        name: "{{ user }}"
        groups: caddy
        append: yes

    - name: Add caddy group
      file:
        path: "/home/{{ user }}/"
        state: directory
        mode: 0755
        owner: "{{ user }}"
        group: caddy

    - name: Create folder
      file:
        path: "/home/{{ user }}/sites-enabled"
        state: directory
        mode: 0755
        owner: "{{ user }}"
        group: caddy

    - name: Read Caddyfile
      slurp:
        src: /etc/caddy/Caddyfile
      register: caddyfile_content

    - name: Decode Caddyfile content
      set_fact:
        caddyfile_decoded: "{{ caddyfile_content['content'] | b64decode }}"

    - name: Clear Caddyfile if no import statement exists
      lineinfile:
        path: /etc/caddy/Caddyfile
        state: absent
        regexp: ".*"
      when: "'import' not in caddyfile_decoded"

    - name: Modify Caddyfile
      lineinfile:
        path: /etc/caddy/Caddyfile
        line: "import /home/{{ user }}/sites-enabled/*.caddy"
        regexp: '^import /home/{{ user }}/sites-enabled/\*.caddy'
        state: present

    - name: Set permissions on new user home directory
      file:
        path: "/home/{{ user }}/"
        mode: 0750

    - name: Set setgid on new user home directory
      file:
        path: "/home/{{ user }}/"
        mode: g+s

    - name: Set setgid on new user home directory
      file:
        path: "/home/{{ user }}/sites-enabled/"
        mode: g+s

    - name: Ensure .ssh directory exists
      file:
        path: "/home/{{ user }}/.ssh"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: 0700

    - name: Generate SSH keypair
      openssh_keypair:
        path: "/home/{{ user }}/.ssh/id_ed25519"
        type: ed25519
        owner: "{{ user }}"
        group: "{{ user }}"
      register: ssh_key

    - name: Copy public key to authorized_keys
      copy:
        remote_src: yes
        mode: "0600"
        owner: "{{ user }}"
        group: "{{ user }}"
        src: "/home/{{ user }}/.ssh/id_ed25519.pub"
        dest: "/home/{{ user }}/.ssh/authorized_keys"

    - name: Fetch private SSH key
      fetch:
        src: "/home/{{ user }}/.ssh/id_ed25519"
        dest: "./{{ user }}.key"
        flat: yes
